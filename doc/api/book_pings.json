{
    "apiVersion": "0.2", 
    "swaggerVersion": "1.1", 
    "basePath": "http://dev.shelvar.com/api", 
    "resourcePath": "/book_pings", 
    "apis": [
		{
            "path": "/book_pings/", 
            "description": "List of book pings", 
            "operations": [
                {
                    "httpMethod": "POST", 
                    "summary": "Insert book pings in database", 
                    "notes": "Uploads book_pings to the database. Data should be a JSON array of entries. On call, returns a string with the value 'SUCCESS' on success and 'ERRORS' otherwise. If the value is 'ERRORS', information about the error is printed in HTML format.",
                    "responseClass": "string", 
                    "nickname": "book_pings", 
                    "parameters": [
                        {
                            "name": "book_pings", 
                            "description": "json formatted array of book_ping entries. Each book_ping consists of a book_tag (base 64), call_number (human readable), neighbor1_tag (base 64), neighbor1_call (human readable), neighbor2_tag (base 64), neighbor2_call (human readable), and ping_time (0000-00-00 00:00:00 format). neighbor1 should be the book to the left of the current book, if any. neighbor2 should be the book to the right of the current book, if any. Example: [{\"book_tag\":\"0cOZA09fhM0cM_gw000000a0\",\"call_number\":\"NX543 .c38 2000\",\"neighbor1_tag\":\"\",\"neighbor1_call\":\"\",\"neighbor2_tag\":\"\",\"neighbor2_call\":\"\",\"ping_time\",\"2012-10-10 10:10:10\"},{\"book_tag\":\"0cOZA09fhM0cM_gw000000a0\",\"call_number\":\"NX543 .c38 2000\",\"neighbor1_tag\":\"\",\"neighbor1_call\":\"\",\"neighbor2_tag\":\"\",\"neighbor2_call\":\"\",\"ping_time\",\"2012-11-11 11:11:11\"}]", 
                            "paramType": "body", 
                            "required": true, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid ping"
                        }
                    ]
                },
                {
                    "httpMethod": "GET", 
                    "summary": "Get recent book pings", 
                    "notes": "Retrieves a list of the most recent book_pings. By default, returns the 20 most recent. Search can be limited using the optional parameters: Will return the 20 most recent pings that match all parameters.", 
                    "responseClass": "void", 
                    "nickname": "book_pings", 
                    "parameters": [
                        {
                            "name": "book_tag", 
                            "description": "base-64 representation of the binary tag", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
						{
                            "name": "call_number", 
                            "description": "Call number, in human-readable format", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        },
                        {
                            "name": "start_date", 
                            "description": "Return only pings that come on or after this date. \"0000-00-00 00:00:00\" format.",
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
                        {
                            "name": "end_date", 
                            "description": "Return only pings that come before this date. \"0000-00-00 00:00:00\" format.",
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        },
						{
                            "name": "num_limit", 
                            "description": "Number of items to return, between 1 and 1000. Default is 20.", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "int"
                        } 
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid status value"
                        }
                    ]
                }
            ]
        }, 
        {
            "path": "/book_pings/count", 
            "description": "Count the number of book pings", 
            "operations": [
                {
                    "httpMethod": "GET", 
                    "summary": "Count the number of book pings in the database", 
                    "notes": "Returns an integer, book_ping_count, representing the number of book_pings in the database. This count may be limited using the optional parameters.",  
                    "responseClass": "string", 
                    "nickname": "count", 
                    "parameters": [
                        {
                            "name": "book_tag", 
                            "description": "base-64 representation of a book_tag. Limit the count to only count pings with this book_tag. Example: 0cOZA09fhM0cM_gw000000a0", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
						{
                            "name": "call_number", 
                            "description": "human-readable call number. Must be URL-encoded. Limit the count to only count pings with this call_number. Example: NX543%20.c38%202000", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        },
                        {
                            "name": "start_date", 
                            "description": "Human-readable date, in \"0000-00-00 00:00:00\" format. Must be URL-encoded. Limit count to only book_pings that occur on or after this date. Example: 2010-01-01%2010%3A15%3A00",
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
                        {
                            "name": "end_date", 
                            "description": "Human-readable date, in \"0000-00-00 00:00:00\" format. Must be URL-encoded. Limit count to only book_pings that occur before this date. Example: 2012-12-30%2014%3A15%3A10", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid tag value"
                        }
                    ]
                }
            ]
        },
		{
            "path": "/book_pings/{book_ping}.json", 
            "description": "Ping retrieval from database", 
            "operations": [
                {
                    "httpMethod": "GET", 
                    "summary": "Retrieve a book ping", 
                    "notes": "Returns the book ping with the database id that is entered.",
                    "responseClass": "string", 
                    "nickname": "getPingByID", 
                    "parameters": [
                        {
                            "name": "book_ping", 
                            "description": "database id of the book ping", 
                            "paramType": "path", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "int"
                        }
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid ping"
                        }
                    ]
                }
            ]
        }
    ], 
    "models": {
        "Category": {
            "id": "Category", 
            "properties": {
                "id": {
                    "type": "long"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }, 
        "Pet": {
            "id": "Pet", 
            "properties": {
                "tags": {
                    "items": {
                        "$ref": "Tag"
                    }, 
                    "type": "Array"
                }, 
                "id": {
                    "type": "long"
                }, 
                "category": {
                    "type": "Category"
                }, 
                "status": {
                    "allowableValues": {
                        "valueType": "LIST", 
                        "values": [
                            "available", 
                            "pending", 
                            "sold"
                        ]
                    }, 
                    "description": "pet status in the store", 
                    "type": "string"
                }, 
                "name": {
                    "type": "string"
                }, 
                "photoUrls": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "Array"
                }
            }
        }, 
        "Tag": {
            "id": "Tag", 
            "properties": {
                "id": {
                    "type": "long"
                }, 
                "name": {
                    "type": "string"
                }
            }
        }
    }
}
