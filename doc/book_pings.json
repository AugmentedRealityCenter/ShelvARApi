{
    "apiVersion": "0.2", 
    "swaggerVersion": "1.1", 
    "resourcePath": "/book_pings", 
    "apis": [
		{
            "path": "/book_pings/", 
            "description": "List of book pings", 
            "operations": [
                {
                    "httpMethod": "POST", 
                    "summary": "Insert book pings into database", 
                    "notes": "Uploads book_pings to the database. Data should be a JSON array of entries. On call, returns a string, named result, with the value 'SUCCESS' on success and 'ERROR' otherwise. If the value is 'ERROR', information about the error follows. Set user id and authentication token in user context.",
                    "responseClass": "string", 
                    "nickname": "book_pings", 
                    "parameters": [
                        {
                            "name": "book_pings", 
                            "description": "json formatted array of book_ping entries. Each book_ping consists of a book_tag (base 64), call_number (human readable), neighbor1_tag (base 64), neighbor1_call (human readable), neighbor2_tag (base 64), neighbor2_call (human readable), and ping_time (0000-00-00 00:00:00 format). neighbor1 should be the book to the left of the current book, if any. neighbor2 should be the book to the right of the current book, if any. Example: [{\"book_tag\":\"0cOZA09fhM0cM_gw000000a0\",\"call_number\":\"NX543 .c38 2000\",\"neighbor1_tag\":\"\",\"neighbor1_call\":\"\",\"neighbor2_tag\":\"\",\"neighbor2_call\":\"\",\"ping_time\",\"2012-10-10 10:10:10\"},{\"book_tag\":\"0cOZA09fhM0cM_gw000000a0\",\"call_number\":\"NX543 .c38 2000\",\"neighbor1_tag\":\"\",\"neighbor1_call\":\"\",\"neighbor2_tag\":\"\",\"neighbor2_call\":\"\",\"ping_time\",\"2012-11-11 11:11:11\"}]", 
                            "paramType": "body", 
                            "required": true, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid ping"
                        }
                    ]
                },
                {
                    "httpMethod": "GET", 
                    "summary": "Get recent book pings", 
                    "notes": "Retrieves a list of the most recent book_pings, which it returns as a json array called book_pings. By default, returns the 20 most recent. Search can be limited using the optional parameters: Will return the 20 most recent pings that match all parameters. Also returns a string named result which will be 'SUCCESS' if everything worked. If not, it will be 'ERROR' followed by an explanatory message. Set user id and authentication token in user context.", 
                    "responseClass": "void", 
                    "nickname": "book_pings", 
                    "parameters": [
                        {
                            "name": "book_tag", 
                            "description": "Base-64 representation of the book tag. Example: 0cOZA09fhM0cM_gw000000a0", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
						{
                            "name": "call_number", 
                            "description": "Call number, in human-readable format. Must be URL Encoded. Example: NX543%20.c38%202000", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        },
                        {
                            "name": "start_date", 
                            "description": "Return only pings that come on or after this date. \"0000-00-00 00:00:00\" format. Must be URL Encoded. Example: 2010-01-01%2010%3A15%3A00",
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
                        {
                            "name": "end_date", 
                            "description": "Return only pings that come before this date. \"0000-00-00 00:00:00\" format. Must be URL Encoded. Example: 2010-01-01%2010%3A15%3A00",
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        },
						{
                            "name": "num_limit", 
                            "description": "Number of items to return, between 1 and 1000. Default is 20.", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "int"
                        } 
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid status value"
                        }
                    ]
                }
            ]
        }, 
        {
            "path": "/book_pings/count", 
            "description": "Count the number of book pings", 
            "operations": [
                {
                    "httpMethod": "GET", 
                    "summary": "Count the number of book pings in the database", 
                    "notes": "Returns an integer, book_ping_count, representing the number of book_pings in the database. This count may be limited using the optional parameters. Note that this method does not return a result. If there is an error, it simply returns a book_ping_count of 0. Set user id and authentication token in user context.",  
                    "responseClass": "string", 
                    "nickname": "count", 
                    "parameters": [
                        {
                            "name": "book_tag", 
                            "description": "Base-64 representation of a book_tag. Limit the count to only count pings with this book_tag. Example: 0cOZA09fhM0cM_gw000000a0", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
						{
                            "name": "call_number", 
                            "description": "Human-readable call number. Must be URL-encoded. Limit the count to only count pings with this call_number. Example: NX543%20.c38%202000", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        },
                        {
                            "name": "start_date", 
                            "description": "Human-readable date, in \"0000-00-00 00:00:00\" format. Must be URL-encoded. Limit count to only book_pings that occur on or after this date. Example: 2010-01-01%2010%3A15%3A00",
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }, 
                        {
                            "name": "end_date", 
                            "description": "Human-readable date, in \"0000-00-00 00:00:00\" format. Must be URL-encoded. Limit count to only book_pings that occur before this date. Example: 2012-12-30%2014%3A15%3A10", 
                            "paramType": "query", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "string"
                        }
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid tag value"
                        }
                    ]
                }
            ]
        },
		{
            "path": "/book_pings/{book_ping_id}.json", 
            "description": "Ping retrieval from database", 
            "operations": [
                {
                    "httpMethod": "GET", 
                    "summary": "Retrieve a book ping", 
                    "notes": "Returns the book ping with the database id that is entered, in a variable named book_ping. Also returns result, which contains SUCCESS if the call succeeded. If it failed, result will be ERROR, followed by an explanatory message. Set user id and authentication token in user context.",
                    "responseClass": "string", 
                    "nickname": "book_ping_by_id", 
                    "parameters": [
                        {
                            "name": "book_ping_id", 
                            "description": "An integer, which is the database id of the book ping. These id values can be obtained using GET /book_pings/", 
                            "paramType": "path", 
                            "required": false, 
                            "allowMultiple": false, 
                            "dataType": "int"
                        }
                    ], 
                    "errorResponses": [
                        {
                            "code": 400, 
                            "reason": "Invalid ping"
                        }
                    ]
                }
            ]
        }
    ] 
}
